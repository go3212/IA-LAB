(define (problem Ext2-35-17)
                (:domain software-project)
                (:objects
                    programmer0 programmer1 programmer2 programmer3 programmer4 programmer5 programmer6 programmer7 programmer8 programmer9 programmer10 programmer11 programmer12 programmer13 programmer14 programmer15 programmer16 programmer17 programmer18 programmer19 programmer20 programmer21 programmer22 programmer23 programmer24 programmer25 programmer26 programmer27 programmer28 programmer29 programmer30 programmer31 programmer32 programmer33 programmer34 - programmer
                    task0 task1 task2 task3 task4 task5 task6 task7 task8 task9 task10 task11 task12 task13 task14 task15 task16 task17 task18 task19 task20 task21 task22 task23 task24 task25 task26 task27 task28 task29 task30 task31 task32 task33 task34 - task
                )
                (:init
                    (= (quality programmer0) 2)(= (skill programmer0) 1)(= (quality programmer1) 2)(= (skill programmer1) 1)(= (quality programmer2) 1)(= (skill programmer2) 1)(= (quality programmer3) 1)(= (skill programmer3) 1)(= (quality programmer4) 1)(= (skill programmer4) 1)(= (quality programmer5) 1)(= (skill programmer5) 3)(= (quality programmer6) 1)(= (skill programmer6) 3)(= (quality programmer7) 1)(= (skill programmer7) 3)(= (quality programmer8) 1)(= (skill programmer8) 2)(= (quality programmer9) 2)(= (skill programmer9) 2)(= (quality programmer10) 2)(= (skill programmer10) 3)(= (quality programmer11) 1)(= (skill programmer11) 3)(= (quality programmer12) 1)(= (skill programmer12) 3)(= (quality programmer13) 2)(= (skill programmer13) 3)(= (quality programmer14) 2)(= (skill programmer14) 3)(= (quality programmer15) 1)(= (skill programmer15) 2)(= (quality programmer16) 1)(= (skill programmer16) 2)(= (quality programmer17) 2)(= (skill programmer17) 1)(= (quality programmer18) 2)(= (skill programmer18) 1)(= (quality programmer19) 1)(= (skill programmer19) 1)(= (quality programmer20) 1)(= (skill programmer20) 3)(= (quality programmer21) 1)(= (skill programmer21) 3)(= (quality programmer22) 1)(= (skill programmer22) 1)(= (quality programmer23) 2)(= (skill programmer23) 2)(= (quality programmer24) 1)(= (skill programmer24) 1)(= (quality programmer25) 1)(= (skill programmer25) 2)(= (quality programmer26) 2)(= (skill programmer26) 1)(= (quality programmer27) 2)(= (skill programmer27) 1)(= (quality programmer28) 2)(= (skill programmer28) 3)(= (quality programmer29) 1)(= (skill programmer29) 1)(= (quality programmer30) 2)(= (skill programmer30) 3)(= (quality programmer31) 2)(= (skill programmer31) 1)(= (quality programmer32) 2)(= (skill programmer32) 3)(= (quality programmer33) 1)(= (skill programmer33) 3)(= (quality programmer34) 2)(= (skill programmer34) 1) 
                    (= (difficulty task0) 3)(= (difficulty task1) 2)(= (difficulty task2) 3)(= (difficulty task3) 1)(= (difficulty task4) 3)(= (difficulty task5) 3)(= (difficulty task6) 1)(= (difficulty task7) 3)(= (difficulty task8) 2)(= (difficulty task9) 1)(= (difficulty task10) 2)(= (difficulty task11) 2)(= (difficulty task12) 1)(= (difficulty task13) 1)(= (difficulty task14) 1)(= (difficulty task15) 2)(= (difficulty task16) 3)(= (difficulty task17) 3)(= (difficulty task18) 2)(= (difficulty task19) 2)(= (difficulty task20) 3)(= (difficulty task21) 1)(= (difficulty task22) 2)(= (difficulty task23) 2)(= (difficulty task24) 1)(= (difficulty task25) 2)(= (difficulty task26) 3)(= (difficulty task27) 3)(= (difficulty task28) 3)(= (difficulty task29) 1)(= (difficulty task30) 1)(= (difficulty task31) 2)(= (difficulty task32) 3)(= (difficulty task33) 3)(= (difficulty task34) 1) 
                    (= (total-hours) 0)
                    
                )
                (:goal 
                    (forall (?t - task) (and (task-assigned ?t) (reviewed ?t)))
                )
                (:metric minimize (total-hours))
                
            )